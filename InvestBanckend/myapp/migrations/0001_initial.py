# Generated by Django 5.0.7 on 2024-08-10 22:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('bank_name', models.TextField(blank=True, db_column='Bank_Name', null=True)),
            ],
            options={
                'db_table': 'Banks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('clinic_name', models.TextField(blank=True, db_column='Clinic_Name', null=True)),
            ],
            options={
                'db_table': 'Clinics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clubs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('club_name', models.TextField(blank=True, db_column='Club_Name', null=True)),
            ],
            options={
                'db_table': 'Clubs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommentsClient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('categorie', models.TextField(blank=True, db_column='Categorie', null=True)),
                ('note', models.TextField(blank=True, db_column='Note', null=True)),
            ],
            options={
                'db_table': 'Comments_Client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnvironsHotel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('details', models.TextField(blank=True, db_column='Details', null=True)),
            ],
            options={
                'db_table': 'Environs_Hotel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipementHotel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('details', models.TextField(blank=True, db_column='Details', null=True)),
            ],
            options={
                'db_table': 'Equipement_Hotel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HotelInfo',
            fields=[
                ('hotel_id', models.IntegerField(db_column='Hotel_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('images', models.TextField(blank=True, db_column='Images', null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('stars', models.TextField(blank=True, db_column='Stars', null=True)),
                ('sustainable', models.TextField(blank=True, db_column='Sustainable', null=True)),
                ('restaurants', models.TextField(blank=True, db_column='Restaurants', null=True)),
                ('restaurants_more_details', models.TextField(blank=True, db_column='Restaurants_More_details', null=True)),
                ('point_fort', models.TextField(blank=True, db_column='Point_Fort', null=True)),
                ('comment_rating', models.TextField(blank=True, db_column='Comment_Rating', null=True)),
            ],
            options={
                'db_table': 'Hotel_Info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoHotelsDetails',
            fields=[
                ('hotel_id', models.IntegerField(db_column='Hotel_ID', primary_key=True, serialize=False)),
                ('hotel_name', models.TextField(blank=True, db_column='Hotel_Name', null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('phone', models.TextField(blank=True, db_column='Phone', null=True)),
                ('fax', models.TextField(blank=True, db_column='Fax', null=True)),
                ('web', models.TextField(blank=True, db_column='Web', null=True)),
                ('email', models.TextField(blank=True, db_column='Email', null=True)),
                ('covid_19_policies', models.TextField(blank=True, db_column='COVID_19_Policies', null=True)),
                ('year_built', models.CharField(blank=True, db_column='Year_Built', max_length=4, null=True)),
                ('check_in_time', models.TimeField(blank=True, db_column='Check_in_time', null=True)),
                ('check_out_time', models.TimeField(blank=True, db_column='Check_out_Time', null=True)),
                ('number_of_floors', models.IntegerField(blank=True, db_column='Number_of_Floors', null=True)),
                ('total_number_of_rooms', models.IntegerField(blank=True, db_column='Total_Number_of_Rooms', null=True)),
                ('chain', models.TextField(blank=True, db_column='Chain', null=True)),
                ('chain_website', models.TextField(blank=True, db_column='Chain_Website', null=True)),
                ('total_number_of_meeting_rooms', models.IntegerField(blank=True, db_column='Total_number_of_meeting_rooms', null=True)),
                ('total_event_space', models.TextField(blank=True, db_column='Total_event_space', null=True)),
                ('total_meeting_room_capacity', models.TextField(blank=True, db_column='Total_meeting_room_capacity', null=True)),
                ('meeting_facilities', models.TextField(blank=True, db_column='Meeting_Facilities', null=True)),
                ('guest_services', models.TextField(blank=True, db_column='Guest_Services', null=True)),
                ('security', models.TextField(blank=True, db_column='Security', null=True)),
                ('amenities', models.TextField(blank=True, db_column='Amenities', null=True)),
            ],
            options={
                'db_table': 'Info_Hotels_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingRooms',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('nom', models.TextField(blank=True, db_column='Nom', null=True)),
                ('dimensions', models.TextField(blank=True, db_column='Dimensions', null=True)),
                ('area', models.TextField(blank=True, db_column='Area', null=True)),
                ('floor_number', models.TextField(blank=True, db_column='Floor_Number', null=True)),
                ('floor_cover', models.TextField(blank=True, db_column='Floor_Cover', null=True)),
                ('portable_walls', models.TextField(blank=True, db_column='Portable_Walls', null=True)),
                ('auditorium', models.IntegerField(blank=True, db_column='Auditorium', null=True)),
                ('classroom', models.IntegerField(blank=True, db_column='Classroom', null=True)),
                ('u_shape', models.IntegerField(blank=True, db_column='U_Shape', null=True)),
                ('reception', models.IntegerField(blank=True, db_column='Reception', null=True)),
                ('banquet', models.IntegerField(blank=True, db_column='Banquet', null=True)),
            ],
            options={
                'db_table': 'Meeting_Rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parkdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('nom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'parkdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restaut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('restaut_name', models.TextField(blank=True, db_column='Restaut_Name', null=True)),
            ],
            options={
                'db_table': 'Restaut',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
